// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.26857 Microsoft Reciprocal License (Ms-RL) 
//    <NameSpace>amf</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Xml.Serialization;

namespace amf
{
    /// <summary>
    ///     Class AMF_Object.
    /// </summary>
    public class AMF_Object
    {
        /// <summary>
        ///     The identifier
        /// </summary>
        [XmlAttribute] public string id;

        /// <summary>
        ///     The mesh
        /// </summary>
        public AMF_Mesh mesh;
    }

    /// <summary>
    ///     Class AMF_Mesh.
    /// </summary>
    public class AMF_Mesh
    {
        /// <summary>
        ///     The vertices
        /// </summary>
        public AMF_Vertices vertices;

        /// <summary>
        ///     The volume
        /// </summary>
        public AMF_Volume volume;
    }

    /// <summary>
    ///     Class AMF_Vertices.
    /// </summary>
    public class AMF_Vertices
    {
        /// <summary>
        ///     The edges
        /// </summary>
        [XmlElement("edge")] public List<AMF_Edge> Edges;

        /// <summary>
        ///     The vertices
        /// </summary>
        [XmlElement("vertex")] public List<AMF_Vertex> Vertices;

        /// <summary>
        ///     Initializes a new instance of the <see cref="AMF_Vertices" /> class.
        /// </summary>
        public AMF_Vertices()
        {
            Edges = new List<AMF_Edge>();
            Vertices = new List<AMF_Vertex>();
        }
    }

    /// <summary>
    ///     Class AMF_Triangle.
    /// </summary>
    public class AMF_Triangle
    {
        /// <summary>
        ///     The color
        /// </summary>
        public AMF_Color color;

        /// <summary>
        ///     The texmap
        /// </summary>
        public AMF_TexMap texmap;

        /// <summary>
        ///     The v1
        /// </summary>
        public int v1;

        /// <summary>
        ///     The v2
        /// </summary>
        public int v2;

        /// <summary>
        ///     The v3
        /// </summary>
        public int v3;

        /// <summary>
        ///     Gets the vertex indices.
        /// </summary>
        /// <value>The vertex indices.</value>
        public List<int> VertexIndices
        {
            get { return new List<int> {v1, v2, v3}; }
        }
    }

    /// <summary>
    ///     Class AMF_Color.
    /// </summary>
    public class AMF_Color
    {
        /// <summary>
        ///     a
        /// </summary>
        public float a = 1.0f;

        /// <summary>
        ///     The b
        /// </summary>
        public float b;

        /// <summary>
        ///     The g
        /// </summary>
        public float g;

        /// <summary>
        ///     The r
        /// </summary>
        public float r;
    }

    /// <summary>
    ///     Class AMF_Volume.
    /// </summary>
    public class AMF_Volume
    {
        /// <summary>
        ///     The color
        /// </summary>
        public AMF_Color color;

        /// <summary>
        ///     The materialid
        /// </summary>
        public string materialid;

        /// <summary>
        ///     The triangles
        /// </summary>
        [XmlElement("triangle")] public List<AMF_Triangle> Triangles;

        /// <summary>
        ///     The type
        /// </summary>
        public AMF_VolumeType type;

        /// <summary>
        ///     The type specified
        /// </summary>
        [XmlIgnore] public bool typeSpecified;

        /// <summary>
        ///     Initializes a new instance of the <see cref="AMF_Volume" /> class.
        /// </summary>
        public AMF_Volume()
        {
            Triangles = new List<AMF_Triangle>();
        }
    }

    /// <summary>
    ///     Enum AMF_VolumeType
    /// </summary>
    public enum AMF_VolumeType
    {
        /// <summary>
        ///     The object
        /// </summary>
        @object,

        /// <summary>
        ///     The support
        /// </summary>
        support
    }

    /// <summary>
    ///     Class AMF_Edge.
    /// </summary>
    public class AMF_Edge
    {
        /// <summary>
        ///     The DX1
        /// </summary>
        public double dx1;

        /// <summary>
        ///     The DX2
        /// </summary>
        public double dx2;

        /// <summary>
        ///     The dy1
        /// </summary>
        public double dy1;

        /// <summary>
        ///     The dy2
        /// </summary>
        public double dy2;

        /// <summary>
        ///     The DZ1
        /// </summary>
        public double dz1;

        /// <summary>
        ///     The DZ2
        /// </summary>
        public double dz2;

        /// <summary>
        ///     The v1
        /// </summary>
        public string v1;

        /// <summary>
        ///     The v2
        /// </summary>
        public string v2;
    }

    /// <summary>
    ///     Class AMF_Normal.
    /// </summary>
    public class AMF_Normal
    {
        /// <summary>
        ///     The nx
        /// </summary>
        public double nx;

        /// <summary>
        ///     The ny
        /// </summary>
        public double ny;

        /// <summary>
        ///     The nz
        /// </summary>
        public double nz;
    }

    /// <summary>
    ///     Class AMF_Coordinates.
    /// </summary>
    public class AMF_Coordinates
    {
        /// <summary>
        ///     The x
        /// </summary>
        public double x;

        /// <summary>
        ///     The y
        /// </summary>
        public double y;

        /// <summary>
        ///     The z
        /// </summary>
        public double z;

        /// <summary>
        ///     Gets as array.
        /// </summary>
        /// <value>As array.</value>
        public double[] AsArray
        {
            get { return new[] {x, y, z}; }
        }
    }

    /// <summary>
    ///     Class AMF_Vertex.
    /// </summary>
    public class AMF_Vertex
    {
        /// <summary>
        ///     The coordinates
        /// </summary>
        public AMF_Coordinates coordinates;
    }


    /// <summary>
    ///     Class AMF_Constellation.
    /// </summary>
    public class AMF_Constellation
    {
        /// <summary>
        ///     The identifier
        /// </summary>
        public string id;

        /// <summary>
        ///     The instance
        /// </summary>
        public List<AMF_Instance> instance;

        /// <summary>
        ///     Initializes a new instance of the <see cref="AMF_Constellation" /> class.
        /// </summary>
        public AMF_Constellation()
        {
            instance = new List<AMF_Instance>();
        }
    }

    /// <summary>
    ///     Class AMF_Instance.
    /// </summary>
    public class AMF_Instance
    {
        /// <summary>
        ///     The deltax
        /// </summary>
        public double deltax;

        /// <summary>
        ///     The deltax specified
        /// </summary>
        [XmlIgnore] public bool deltaxSpecified;

        /// <summary>
        ///     The deltay
        /// </summary>
        public double deltay;

        /// <summary>
        ///     The deltay specified
        /// </summary>
        [XmlIgnore] public bool deltaySpecified;

        /// <summary>
        ///     The deltaz
        /// </summary>
        public double deltaz;

        /// <summary>
        ///     The deltaz specified
        /// </summary>
        [XmlIgnore] public bool deltazSpecified;

        /// <summary>
        ///     The objectid
        /// </summary>
        public string objectid;

        /// <summary>
        ///     The rx
        /// </summary>
        public double rx;

        /// <summary>
        ///     The rx specified
        /// </summary>
        [XmlIgnore] public bool rxSpecified;

        /// <summary>
        ///     The ry
        /// </summary>
        public double ry;

        /// <summary>
        ///     The ry specified
        /// </summary>
        [XmlIgnore] public bool rySpecified;

        /// <summary>
        ///     The rz
        /// </summary>
        public double rz;

        /// <summary>
        ///     The rz specified
        /// </summary>
        [XmlIgnore] public bool rzSpecified;
    }

    /// <summary>
    ///     Class AMF_Texture.
    /// </summary>
    public class AMF_Texture
    {
        /// <summary>
        ///     The depth
        /// </summary>
        [XmlAttribute] public int depth;

        /// <summary>
        ///     The height
        /// </summary>
        [XmlAttribute] public int height;

        /// <summary>
        ///     The identifier
        /// </summary>
        [XmlAttribute] public string id;

        /// <summary>
        ///     The tiled
        /// </summary>
        [XmlAttribute] public bool tiled;

        /// <summary>
        ///     The type
        /// </summary>
        [XmlAttribute] public AMF_TextureType type;

        /// <summary>
        ///     The value
        /// </summary>
        [XmlText] public string Value;

        /// <summary>
        ///     The width
        /// </summary>
        [XmlAttribute] public int width;
    }

    /// <summary>
    ///     Enum AMF_TextureType
    /// </summary>
    public enum AMF_TextureType
    {
        /// <summary>
        ///     The grayscale
        /// </summary>
        grayscale
    }

    /// <summary>
    ///     Class AMF_Composite.
    /// </summary>
    public class AMF_Composite
    {
        /// <summary>
        ///     The materialid
        /// </summary>
        public string materialid;

        /// <summary>
        ///     The value
        /// </summary>
        [XmlText] public string Value;
    }

    /// <summary>
    ///     Class AMF_Material.
    /// </summary>
    public class AMF_Material
    {
        /// <summary>
        ///     The composite
        /// </summary>
        public List<AMF_Composite> composite;

        /// <summary>
        ///     The identifier
        /// </summary>
        public string id;

        /// <summary>
        ///     The metadata
        /// </summary>
        public List<AMF_Metadata> metadata;

        /// <summary>
        ///     Initializes a new instance of the <see cref="AMF_Material" /> class.
        /// </summary>
        public AMF_Material()
        {
            composite = new List<AMF_Composite>();
            metadata = new List<AMF_Metadata>();
        }
    }

    /// <summary>
    ///     Class AMF_Metadata.
    /// </summary>
    public class AMF_Metadata
    {
        /// <summary>
        ///     The type
        /// </summary>
        public string type;

        /// <summary>
        ///     The value
        /// </summary>
        [XmlText] public string Value;
    }

    /// <summary>
    ///     Class AMF_TexMap.
    /// </summary>
    public class AMF_TexMap
    {
        /// <summary>
        ///     The atexid
        /// </summary>
        public string atexid;

        /// <summary>
        ///     The btexid
        /// </summary>
        public string btexid;

        /// <summary>
        ///     The gtexid
        /// </summary>
        public string gtexid;

        /// <summary>
        ///     The rtexid
        /// </summary>
        public string rtexid;

        /// <summary>
        ///     The utex1
        /// </summary>
        public double utex1;

        /// <summary>
        ///     The utex2
        /// </summary>
        public double utex2;

        /// <summary>
        ///     The utex3
        /// </summary>
        public double utex3;

        /// <summary>
        ///     The vtex1
        /// </summary>
        public double vtex1;

        /// <summary>
        ///     The vtex2
        /// </summary>
        public double vtex2;

        /// <summary>
        ///     The vtex3
        /// </summary>
        public double vtex3;

        /// <summary>
        ///     The wtex1
        /// </summary>
        public double wtex1;

        /// <summary>
        ///     The wtex1 specified
        /// </summary>
        [XmlIgnore] public bool wtex1Specified;

        /// <summary>
        ///     The wtex2
        /// </summary>
        public double wtex2;

        /// <summary>
        ///     The wtex2 specified
        /// </summary>
        [XmlIgnore] public bool wtex2Specified;

        /// <summary>
        ///     The wtex3
        /// </summary>
        public double wtex3;

        /// <summary>
        ///     The wtex3 specified
        /// </summary>
        [XmlIgnore] public bool wtex3Specified;
    }

    /// <summary>
    ///     Enum AMF_Unit
    /// </summary>
    public enum AMF_Unit
    {
        /// <summary>
        ///     The inch
        /// </summary>
        inch,

        /// <summary>
        ///     The millimeter
        /// </summary>
        millimeter,

        /// <summary>
        ///     The meter
        /// </summary>
        meter,

        /// <summary>
        ///     The feet
        /// </summary>
        feet,

        /// <summary>
        ///     The micron
        /// </summary>
        micron
    }
}